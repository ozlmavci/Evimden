using Evimden.CoreLayer.Abstract;using System.Linq.Expressions;namespace Evimden.CoreLayer.Repository{    public interface IGenericRepository<T> where T : class, IEntity    {        Task<T> GetByIdAsync(Guid id);        Task<T> GetByIntIdAsync(int id);        IQueryable<T> GetAll();        IQueryable<T> Where(Expression<Func<T, bool>> expression);        Task<bool> AnyAsync(Expression<Func<T, bool>> expression);        Task<T> AddAsync(T entity);        Task AddRangeAsync(List<T> entities);        void Update(T entity);        void Delete(T entity);        void DeleteRange(List<T> entities);    }}